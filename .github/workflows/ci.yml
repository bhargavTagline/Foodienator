name: Deploy-ios
on: 
  push:
    branches:
      - development
jobs:
  deploy_ios:
    runs-on: macos-latest
    steps:
     - uses: maxim-lobanov/setup-xcode@v1
       with:
         xcode-version: '13.1'
     - uses: actions/checkout@v2
    
     - name: setup ruby
       run: brew install openssl readline rbenv ruby-build

     - name: Set environment variables from project settings
       run: |
         bash .github/scripts/set-env-from-xcodeproj.sh

     - name: Import signing certificate
       env:
         SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.SIGNING_CERTIFICATE_P12_DATA }}
         SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}
       run: |
         exec .github/scripts/import-certificate.sh

     - name: Import provisioning profile
       env:
         PROVISIONING_PROFILE_DATA: ${{ secrets.PROVISIONING_PROFILE_DATA }}
       run: |
         exec .github/scripts/import-profile.sh
     
     - name: setup xcode version
        run: |
         cd ios
         sudo xcode-select -s /Applications/Xcode_13.1.app
     
     - name: Setup Node
       uses: actions/setup-node@v1
       with:
        node-version: '16.x'

     - name: Install dependencies
       run: npm install

     - name: Install pod dependencies
       run: |
         cd ios && pod install && cd ..

     - name: setup fastlane
       run: cd ios && bundle install    

     - name: Increment Version
       run: |
         cd ios
         echo $COMMIT_MESSAGE
         bundle exec fastlane increment_version_prod
       env: 
         COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

     - name: upload to testflight
       env:
         FASTLANE_USER: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
         FASTLANE_PASSWORD: ${{ secrets.APP_STORE_CONNECT_PASSWORD }}
         APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
         FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
       run: |
         cd ios
         bundle exec fastlane build_to_testflight




# name: Pull Request
 
# on:
#   pull_request:
#     branch:
#     - development
#   workflow_dispatch:  

# jobs:
#   deploy:
#    runs-on: macos-11

#    steps:
#      - uses: maxim-lobanov/setup-xcode@v1
#        with:
#          xcode-version: '14.0'
#      - uses: actions/checkout@v2
#      - name: setup ruby
#        run: brew install openssl readline rbenv ruby-build
 
#      - name: Set environment variables from project settings
#        run: |
#          exec .github/scripts/set-env-from-xcodeproj.sh
 
#      - name: Import signing certificate
#        env:
#          SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.SIGNING_CERTIFICATE_P12_DATA }}
#          SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}
#        run: |
#          exec .github/scripts/import-certificate.sh
 
#      - name: Import provisioning profile
#        env:
#          PROVISIONING_PROFILE_DATA: ${{ secrets.PROVISIONING_PROFILE_DATA }}
#        run: |
#          exec .github/scripts/import-profile.sh
 
#      - name: setup xcode version
#        run: |
#          cd ios
#          sudo xcode-select -s /Applications/Xcode_14.0.app
#     - name: Install npm dependencies
#        run: npm install
#      - name: Install pod dependencies
#        run: |
#          cd ios && pod install
 
#      - name: setup fastlane
#        run: cd ios && bundle install
      
#      - name: upload to testflight
#        env:
#          FASTLANE_USER: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
#          FASTLANE_PASSWORD: ${{ secrets.APP_STORE_CONNECT_PASSWORD }}
#          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
#          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
#        run: |
#          cd ios
#          bundle exec fastlane build_to_testflight 



# name: deploy

# on:
#   push:
#     branches: [ master ]
#     tags: [ v* ]
#   workflow_dispatch:  
# jobs:
#   deploy:
#     runs-on: macos-latest

#     steps:
#       - name: Checkout project
#         uses: actions/checkout@v2

#       - name: Set environment variables from project settings
#         run: |
#           exec .github/scripts/set-env-from-xcodeproj.sh
#       - name: Import signing certificate
#         env:
#           SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.SIGNING_CERTIFICATE_P12_DATA }}
#           SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}
#         run: |
#           exec .github/scripts/import-certificate.sh
#       - name: Import provisioning profile
#         env:
#           PROVISIONING_PROFILE_DATA: ${{ secrets.PROVISIONING_PROFILE_DATA }}
#         run: |
#           exec .github/scripts/import-profile.sh
#       - name: Build app
#         run: |
#           fastlane run build_app
#       - name: Upload build artifacts
#         uses: actions/upload-artifact@v2
#         with:
#           name: build.log
#           path: ~/Library/Logs/gym/*.log

#       - name: Upload release assets
#         if: startsWith(github.ref, 'refs/tags/v')
#         uses: softprops/action-gh-release@v1
#         with:
#           files: |
#             ${{ env.PRODUCT_NAME }}.ipa
#             ${{ env.PRODUCT_NAME }}.app.dSYM.zip
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#       - name: Upload app to App Store Connect
#         if: startsWith(github.ref, 'refs/tags/v')
#         env:
#           APP_STORE_CONNECT_USERNAME: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
#           APP_STORE_CONNECT_PASSWORD: ${{ secrets.APP_STORE_CONNECT_PASSWORD }}
#         run: |
#           xcrun altool --upload-app -t ios -f "$PRODUCT_NAME.ipa" -u "$APP_STORE_CONNECT_USERNAME" -p "$APP_STORE_CONNECT_PASSWORD"




